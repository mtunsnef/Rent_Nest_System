@model List<RentNest.Core.Domains.Conversation>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
@{
    ViewData["Title"] = "Trò chuyện";
}
@{
    var currentUserId = (int)ViewData["CurrentUserId"];
}
<section class="ftco-section" id="chatroom-section" style="padding-bottom: 1.5em;">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-12">
                <input type="hidden" id="currentUserId" value="@ViewData["CurrentUserId"]" />
                <input type="hidden" id="openedConversationId" value="@ViewData["OpenedConversationId"]" />
                <div class="row" style="height: 735px; border: 1px solid #dee2e6; border-radius: 10px; overflow: hidden;">
                    <div class="col-md-4 bg-light p-0" style="overflow-y: auto;">
                        <div class="p-3 border-bottom">
                            <div class="btn-group mb-2 d-flex justify-content-between">
                                <label class="btn btn-sm flex-fill mx-1 btn-primary active-filter" data-value="all">
                                    <input type="radio" name="filter" value="all" class="d-none" checked> Tất cả
                                </label>
                                <label class="btn btn-sm flex-fill mx-1 btn-primary" data-value="read">
                                    <input type="radio" name="filter" value="read" class="d-none"> Đã đọc
                                </label>
                                <label class="btn btn-sm flex-fill mx-1 btn-primary" data-value="unread">
                                    <input type="radio" name="filter" value="unread" class="d-none"> Chưa đọc
                                </label>
                            </div>
                            <input type="text" class="form-control" placeholder="Nhập ít nhất 3 ký tự để tìm...">
                        </div>

                        <div class="list-group list-group-flush">
                            @foreach (var conversation in Model)
                            {
                                var otherUser = conversation.SenderId == currentUserId
                                ? conversation.Receiver
                                : conversation.Sender;
                                
                                <a class="list-group-item list-group-item-action d-flex align-items-center conversation-item"
                                   data-id="@conversation.ConversationId" data-receiver-id="@otherUser.AccountId">
                                    <img src="@(otherUser.UserProfile.AvatarUrl ?? "/images/person_1.jpg")" class="rounded-circle mr-3" width="40" height="40" />
                                    <div class="ml-2">
                                        <div class="font-weight-bold">@otherUser.UserProfile.FirstName @otherUser.UserProfile.LastName</div>
                                        <small>@conversation.Post?.Title</small>
                                    </div>
                                </a>
                            }
                        </div>
                    </div>

                    <!-- Chat chính -->
                    <div class="col-md-8 p-0 d-flex flex-column" style="height: 735px;">
                        <div id="receiverInfo" class="d-flex align-items-center justify-content-between p-3 border-bottom"></div>
                        <div id="postInfo" class="d-flex align-items-center border-bottom p-3" style="background-color: #f8f9fa;"></div>
                        <div id="chatBox" class="flex-grow-1 p-3" style="overflow-y: auto; background: #fff;"></div>

                        <div class="p-3 border-top">
                            <div class="d-flex align-items-center">
                                <label class="cursor mr-2">
                                    <svg width="24px" height="24px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M14.2639 15.9375L12.5958 14.2834C11.7909 13.4851 11.3884 13.086 10.9266 12.9401C10.5204 12.8118 10.0838 12.8165 9.68048 12.9536C9.22188 13.1095 8.82814 13.5172 8.04068 14.3326L4.04409 18.2801M14.2639 15.9375L14.6053 15.599C15.4112 14.7998 15.8141 14.4002 16.2765 14.2543C16.6831 14.126 17.12 14.1311 17.5236 14.2687C17.9824 14.4251 18.3761 14.8339 19.1634 15.6514L20 16.4934M14.2639 15.9375L18.275 19.9565M18.275 19.9565C17.9176 20 17.4543 20 16.8 20H7.2C6.07989 20 5.51984 20 5.09202 19.782C4.71569 19.5903 4.40973 19.2843 4.21799 18.908C4.12796 18.7313 4.07512 18.5321 4.04409 18.2801M18.275 19.9565C18.5293 19.9256 18.7301 19.8727 18.908 19.782C19.2843 19.5903 19.5903 19.2843 19.782 18.908C20 18.4802 20 17.9201 20 16.8V16.4934M4.04409 18.2801C4 17.9221 4 17.4575 4 16.8V7.2C4 6.0799 4 5.51984 4.21799 5.09202C4.40973 4.71569 4.71569 4.40973 5.09202 4.21799C5.51984 4 6.07989 4 7.2 4H16.8C17.9201 4 18.4802 4 18.908 4.21799C19.2843 4.40973 19.5903 4.71569 19.782 5.09202C20 5.51984 20 6.0799 20 7.2V16.4934M17 8.99989C17 10.1045 16.1046 10.9999 15 10.9999C13.8954 10.9999 13 10.1045 13 8.99989C13 7.89532 13.8954 6.99989 15 6.99989C16.1046 6.99989 17 7.89532 17 8.99989Z" stroke="#000000" stroke-width="1.248" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>
                                    <input type="file" id="imageInput" multiple hidden accept="image/*">
                                </label>
                                <label class="cursor mr-2">
                                    <svg id="openQuickMsgPopup" width="24px" height="24px" viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg" stroke-width="4.096" stroke="#000000" fill="none"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M58.48,28.81c0,10.72-11,19.41-24.58,19.41A29.69,29.69,0,0,1,30.22,48c-2.08-.24-7.91,7.19-9.79,6.56-1.5-.51.91-9-.43-9.73-6.45-3.5-10.69-9.37-10.69-16,0-10.72,11-19.4,24.59-19.4S58.48,18.09,58.48,28.81Z" stroke-linecap="round"></path><line x1="35.03" y1="21.84" x2="35.03" y2="35.84"></line><line x1="28.03" y1="28.84" x2="42.03" y2="28.84"></line></g></svg>
                                </label>
                                <div class="input-wrapper" style="position: relative; display: inline-block; width: 100%;">
                                    <img id="previewImageInside" style="display: none; position: absolute; top: 6px; left: 8px; height: 50px; width: 80px; object-fit: cover; border-radius: 6px; z-index: 2;" />
                                    <div id="removeImageBtn" class="position-absolute bg-dark rounded-circle justify-content-center align-items-center"
                                         style="display: none; width: 15px; height: 15px; cursor: pointer; top: 2px; left: 80px; z-index: 3;">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="white" viewBox="0 0 16 16">
                                            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                                        </svg>
                                    </div>                                    
                                    <input type="text" id="messageInput" class="form-control" placeholder="Nhập tin nhắn" />
                                </div>
                                <button class="btn ml-2" id="sendBtn">
                                    <svg width="32px" height="32px" viewBox="0 0 21.00 21.00" id="meteor-icon-kit__solid-paper-plane" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="#000000" stroke-width="0.00021000000000000004"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" stroke="#CCCCCC" stroke-width="0.462"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.61258 9L0.05132 1.31623C-0.22718 0.48074 0.63218 -0.28074 1.42809 0.09626L20.4281 9.0963C21.1906 9.4575 21.1906 10.5425 20.4281 10.9037L1.42809 19.9037C0.63218 20.2807 -0.22718 19.5193 0.05132 18.6838L2.61258 11H8.9873C9.5396 11 9.9873 10.5523 9.9873 10C9.9873 9.4477 9.5396 9 8.9873 9H2.61258z" fill="#4b69bd"></path></g><g id="SVGRepo_iconCarrier"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.61258 9L0.05132 1.31623C-0.22718 0.48074 0.63218 -0.28074 1.42809 0.09626L20.4281 9.0963C21.1906 9.4575 21.1906 10.5425 20.4281 10.9037L1.42809 19.9037C0.63218 20.2807 -0.22718 19.5193 0.05132 18.6838L2.61258 11H8.9873C9.5396 11 9.9873 10.5523 9.9873 10C9.9873 9.4477 9.5396 9 8.9873 9H2.61258z" fill="#4b69bd"></path></g></svg>
                                </button>
                            </div>

                            <div class="mt-2" style="overflow-x: auto; white-space: nowrap;">
                                <div class="d-inline-flex" id="quickReplyContainer"></div>
                            </div>

                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>
@section Scripts {
    <script src="~/js/chat-room/my-chat.js"></script>
}
<script>
    //add quick message
    document.getElementById("openQuickMsgPopup").addEventListener("click", async () => {
        const { value: text } = await Swal.fire({
            title: "Thêm tin nhắn nhanh",
            input: "textarea",
            inputPlaceholder: "Nhập tin nhắn...",
            inputAttributes: {
                "aria-label": "Nội dung tin nhắn nhanh"
            },
            showCancelButton: true,
            confirmButtonText: "Thêm",
            cancelButtonText: "Hủy",
            customClass: {
                confirmButton: 'btn btn-primary',  
                cancelButton: 'btn btn-outline-secondary'
            },
            inputValidator: (value) => {
                if (!value) {
                    return "Nội dung không được để trống!";
                }
            }
        });

        if (text) {
            const response = await fetch("/api/v1/quick-messages", {
                method: "POST",
                headers: {
                    "Content-type": "application/json"
                },
                credentials: "include",
                body: JSON.stringify({
                    content: text
                })
            });

            if(response.ok) {
                Swal.fire({
                    icon: "success",
                    title: "Đã thêm",
                    text: "Tin nhắn nhanh đã được lưu!"
                });
                const detailRes = await fetch(`/api/v1/chatroom/detail/${chatState.currentConversationId}`, {
                    method: 'GET',
                    credentials: 'include'
                });

                if (detailRes.ok) {
                    const detailData = await detailRes.json();
                    renderQuickReplies(detailData.quickReplies);
                }
            } else 
            {
                Swal.fire({
                    icon: "error",
                    title: "Lỗi",
                    text: "Không thể lưu tin nhắn nhanh!"
                });
            }
        }
    });
</script>
