@model RentNest.Web.Models.ProfileViewModel
@{
    ViewData["Title"] = "Thông tin cá nhân";
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="container" style="padding-top: 8rem; padding-bottom: 5rem">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="bg-light p-4 p-md-5 rounded shadow-sm">
                <div class="row">
                    <div class="col-md-8">
                        <h2 class="mb-4">Thông Tin Cá Nhân</h2>

                        <form asp-action="UpdateProfile" asp-controller="Account" method="post" class="contact-form">
                            <input type="hidden" asp-for="AccountId" />
                            <input type="hidden" asp-for="AvatarUrl" />

                            <div class="form-group mb-3" id="fullname-display">
                                <label class="control-label">Họ và Tên</label>
                                <input class="form-control" value="@($"{Model.FirstName} {Model.LastName}")" readonly />
                            </div>

                            <div class="row mb-3 d-none" id="fullname-edit">
                                <div class="col-md-6">
                                    <label asp-for="FirstName" class="control-label"></label>
                                    <input asp-for="FirstName" class="form-control" />
                                </div>
                                <div class="col-md-6">
                                    <label asp-for="LastName" class="control-label"></label>
                                    <input asp-for="LastName" class="form-control" />
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="Address" class="control-label"></label>
                                <input asp-for="Address" class="form-control" readonly />
                                <span asp-validation-for="Address" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="PhoneNumber" class="control-label"></label>
                                <input asp-for="PhoneNumber" class="form-control" readonly />
                                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label asp-for="DateOfBirth" class="control-label"></label>
                                    <input asp-for="DateOfBirth" class="form-control" type="date" readonly id="DateOfBirth" />
                                    <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                                </div>
                                <div class="col-md-6">
                                    <label asp-for="Gender" class="control-label"></label>
                                    <select asp-for="Gender" class="form-control" disabled>
                                        <option value="M">Nam</option>
                                        <option value="F">Nữ</option>
                                        <option value="O">Khác</option>
                                    </select>
                                    <span asp-validation-for="Gender" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="Occupation" class="control-label"></label>
                                <input asp-for="Occupation" class="form-control" readonly />
                                <span asp-validation-for="Occupation" class="text-danger"></span>
                            </div>

                            <div class="form-group mt-3">
                                <button type="button" class="btn btn-primary" id="btn-edit">Chỉnh sửa</button>
                                <button type="submit" class="btn btn-success d-none" id="btn-save">Lưu thay đổi</button>
                                <button type="button" class="btn btn-secondary d-none" id="btn-cancel">Hủy</button>
                            </div>
                        </form>
                    </div>

                    <div class="col-md-4 d-flex flex-column align-items-center justify-content-center">
                        <div class="text-center">
                            <img src="@(!string.IsNullOrEmpty(Model.AvatarUrl) ? Model.AvatarUrl : "/images/default-avatar.jpg")"
                                 alt="Avatar" class="border shadow" width="230" height="230" style="object-fit: cover"/>
                            <div class="mt-3">
                                <form id="avatarForm" enctype="multipart/form-data">
                                    @Html.AntiForgeryToken()
                                    <input type="file" id="avatarInput" name="avatar" accept="image/*" hidden />
                                    <label for="avatarInput" class="btn btn-primary mt-2">Thay đổi ảnh</label>
                                </form>
                            </div>
                        </div>
                    </div>
                </div> <!-- End row -->
            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrEmpty(TempData["SuccessMessage"] as string))
{
    <script>
        Swal.fire({
            icon: "success",
            title: "Thành công!",
            text: '@Html.Raw(TempData["SuccessMessage"])',
            confirmButtonColor: "#3085d6",
            confirmButtonText: "OK"
        });
    </script>
}
@if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
{
    <script>
        Swal.fire({
            icon: "error",
            title: "Lỗi!",
            text: '@Html.Raw(TempData["ErrorMessage"])',
            confirmButtonColor: "#d33",
            confirmButtonText: "OK"
        });
    </script>
}

<script>
    function toggleEdit() {
        const inputs = document.querySelectorAll("#FirstName, #LastName, #Address, #DateOfBirth, #Occupation");
        const genderSelect = document.getElementById("Gender");
        const editButton = document.getElementById("editButton");
        const saveButton = document.getElementById("saveButton");

        inputs.forEach(input => input.removeAttribute("readonly"));
        genderSelect.removeAttribute("disabled");

        editButton.classList.add("d-none");
        saveButton.classList.remove("d-none");
    }

    document.getElementById("avatarInput").addEventListener("change", function (e) {
        e.preventDefault();

        var formData = new FormData();
        formData.append("avatar", this.files[0]);
        formData.append("__RequestVerificationToken", $('input[name="__RequestVerificationToken"]').val());

        fetch("/Account/UploadAvatar", {
            method: "POST",
            body: formData
        })
        .then(res => res.json())
        .then(data => {
            Swal.fire({
                icon: data.success ? "success" : "error",
                title: data.success ? "Thành công!" : "Thất bại!",
                text: data.message
            }).then(() => {
                if (data.success) location.reload();
            });
        })
        .catch(error => {
            console.error("Upload error:", error);
            Swal.fire("Lỗi!", "Không thể upload ảnh.", "error");
        });
    });


</script>
@section Scripts {
    <script>
        const btnEdit = document.getElementById('btn-edit');
        const btnSave = document.getElementById('btn-save');
        const btnCancel = document.getElementById('btn-cancel');

        btnEdit.addEventListener('click', () => {
            document.getElementById('fullname-display').classList.add('d-none');
            document.getElementById('fullname-edit').classList.remove('d-none');

            document.querySelectorAll('input[readonly]').forEach(e => e.removeAttribute('readonly'));
            document.querySelector('select[disabled]').removeAttribute('disabled');

            btnEdit.classList.add('d-none');
            btnSave.classList.remove('d-none');
            btnCancel.classList.remove('d-none');
        });

        btnCancel.addEventListener('click', () => {
            location.reload();
        });
    </script>
}