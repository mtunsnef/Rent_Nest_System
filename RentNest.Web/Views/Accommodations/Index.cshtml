@using RentNest.Core.Enums;
@using RentNest.Core.UtilHelper;
@model IEnumerable<RentNest.Web.Models.AccommodationIndexViewModel>
@{
	ViewData["Title"] = "Phòng";
}
@{
	var hasSearched = ViewBag.HasSearched != null && (bool)ViewBag.HasSearched;
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css" />
<section class=" ftco-animate hero-wrap-boxed">
	<div class="hero-bg" style="background-image: url('images/bg_3.jpg');">
		<div class="overlay"></div>
		<div class="container">
			<div class="row no-gutters align-items-center justify-content-start" style="min-height: 160px;">
				<div class="col-md-12 mb-5 mb-lg-5">
					<p class="breadcrumbs mb-1">
						<span class="mr-2">
							<a href="/trang-chu">Trang chủ <i class="ion-ios-arrow-forward"></i></a>
						</span>
						<span>Danh sách các phòng <i class="ion-ios-arrow-forward"></i></span>
					</p>
				</div>
			</div>
			<form asp-action="Search" method="post" asp-controller="Accommodations">
				<input type="hidden" name="ProvinceId" id="provinceId" />
				<input type="hidden" name="DistrictId" id="districtId" />
				<input type="hidden" name="WardId" id="wardId" />
				<div class="row g-2 align-items-end">
					<div class="col-md">
						<label for="provinceDropdown" class="form-label text-white fw-semibold">
							Tỉnh/Thành phố <span class="text-danger">*</span>
						</label>
						<select id="provinceDropdown" class="form-control text-white bg-transparent border-light" required>
							<option value="">Chọn tỉnh/thành phố...</option>
						</select>
						<input name="provinceName" type="hidden" id="provinceName" />
						<div class="invalid-feedback">Vui lòng chọn tỉnh/thành phố.</div>
					</div>
					<div class="col-md">
						<label for="districtDropdown" class="form-label text-white fw-semibold">
							Quận/Huyện <span class="text-danger">*</span>
						</label>
						<select id="districtDropdown" class="form-control text-white bg-transparent border-light" required>
							<option value="">Chọn quận/huyện...</option>
						</select>
						<input name="DistrictName" type="hidden" id="districtName" />
						<div class="invalid-feedback">Vui lòng chọn quận/huyện.</div>
					</div>

					<div class="col-md">
						<label for="wardDropdown" class="form-label text-white fw-semibold">
							Phường/Xã
						</label>
						<select id="wardDropdown" class="form-control text-white bg-transparent border-light">
							<option value="">Chọn phường/xã...</option>
						</select>
						<input name="WardName" type="hidden" id="wardName" />
						<div class="invalid-feedback">Vui lòng chọn phường/xã.</div>
					</div>

					<div class="col-md">
						<label for="area" class="form-label text-white">Diện tích (m²)</label>
						<input type="number" id="area" name="area" value="@ViewBag.Area" min="0" step="0.5" class="form-control text-white bg-transparent border-light" placeholder="Diện tích (m²)">
					</div>

					<div class="col-md">
						<label for="minMoney" class="form-label text-white">Giá thấp nhất</label>
						<input type="number" id="minMoney" name="minMoney" min="0" step="10000" class="form-control text-white bg-transparent border-light" placeholder="Tối thiểu (VNĐ)">
					</div>

					<div class="col-md">
						<label for="maxMoney" class="form-label text-white">Giá cao nhất</label>
						<input type="number" id="maxMoney" name="maxMoney" min="0" step="10000" class="form-control text-white bg-transparent border-light" placeholder="Tối đa (VNĐ)">
					</div>

					<div class="col-auto d-flex align-items-end">
						<button type="submit" class="btn btn-primary px-4 h-100 mb-2">Tìm</button>
					</div>
				</div>
			</form>
			<div style="height: 40px;"></div>
		</div>
	</div>
</section>
<section class="ftco-properties" id="properties-section" style="margin-top: 4rem">
	<div class="container-fluid px-md-5">
		<div class="row">
			<div class="col-lg-3 pr-lg-4  ftco-animate">
				<div class="search-wrap">
					<h3 class="mb-5">Tìm kiếm</h3>
					<form action="#" class="search-property">
						<div class="row">
							<!-- Loại phòng -->
							<div class="col-md-12 align-items-end ftco-animate">
								<div class="form-group">
									<label for="#">Loại phòng</label>
									<div class="form-field">
										<div class="select-wrap">
											<div class="icon"><span class="ion-ios-arrow-down"></span></div>
											<select name="" id="" class="form-control">
												<option value="">Chọn loại phòng</option>
												<option value="">Phòng trọ</option>
												<option value="">Nhà nguyên căn</option>
												<option value="">Căn hộ ,Chung cư</option>
											</select>
										</div>
									</div>
								</div>
							</div>
							<!-- Trạng thái phòng -->
							<div class="col-md-12 align-items-end ftco-animate">
								<div class="form-group">
									<label for="#">Trạng thái phòng</label>
									<div class="form-field">
										<div class="select-wrap">
											<div class="icon"><span class="ion-ios-arrow-down"></span></div>
											<select name="" id="" class="form-control">
												<option value="">Chọn trạng thái</option>
												<option value="">Cho thuê</option>
												<option value="">Đã thuê</option>
											</select>
										</div>
									</div>
								</div>
							</div>
							<!-- Giá thuê tối thiểu -->
							<div class="col-md-12 align-items-end ftco-animate">
								<div class="form-group">
									<label for="min-price">Giá thuê tối thiểu</label>
									<div class="form-field">
										<input type="number" id="min-price" name="min-price" class="form-control"
										placeholder="Nhập giá tối thiểu (VNĐ)">
									</div>
								</div>
							</div>

							<!-- Giá thuê tối đa -->
							<div class="col-md-12 align-items-end ftco-animate">
								<div class="form-group">
									<label for="max-price">Giá thuê tối đa</label>
									<div class="form-field">
										<input type="number" id="max-price" name="max-price" class="form-control"
										placeholder="Nhập giá tối đa (VNĐ)">
									</div>
								</div>
							</div>

							<!-- Diện tích tối thiểu -->
							<div class="col-md-12 align-items-end ftco-animate">
								<div class="form-group">
									<label for="#">Diện tích tối thiểu <span>(m²)</span></label>
									<div class="form-field">
										<div class="icon"><span class="icon-pencil"></span></div>
										<input type="text" class="form-control" placeholder="Nhập diện tích tối thiểu">
									</div>
								</div>
							</div>
							<!-- Diện tích tối đa -->
							<div class="col-md-12 align-items-end ftco-animate">
								<div class="form-group">
									<label for="#">Diện tích tối đa <span>(m²)</span></label>
									<div class="form-field">
										<div class="icon"><span class="icon-pencil"></span></div>
										<input type="text" class="form-control" placeholder="Nhập diện tích tối đa">
									</div>
								</div>
							</div>
							<!-- My Favorite Checkbox -->
							<div class="col-md-12 align-items-end ftco-animate">
								<div class="form-group">
									<label>
										<input type="checkbox" id="chkFavorite" />
										Bài viết yêu thích của tôi
									</label>
								</div>
							</div>


						</div>
					</form>
				</div>
			</div><!-- end -->
			<div class="col-lg-9">
				@if (hasSearched && !Model.Any())
				{	
					<div class="alert alert-warning text-center mt-3">
						Hiện tại không có phòng nào phù hợp với tiêu chí bạn chọn.
					</div>
				} 
				else 
				{
					<div class="row">
						@foreach (var item in Model)
						{
							var postedAgo = item.CreatedAt.HasValue
							? (DateTime.Now - item.CreatedAt.Value) switch
							{
								var d when d.TotalHours < 1 => "Vừa đăng",
								var d when d.TotalHours < 24 => $"{(int)d.TotalHours} giờ trước",
								var d => $"{(int)d.TotalDays} ngày trước"
							} : "";

							var typeEnum = BadgeHelper.ParsePackageType(item.PackageTypeName);
							var isVip = BadgeHelper.IsVip(typeEnum);
							var isDiamond = typeEnum == PackageTypeEnum.Diamond;
							var isGold = typeEnum == PackageTypeEnum.Gold;
							var isSilver = typeEnum == PackageTypeEnum.Silver;
							var isNormal = typeEnum == PackageTypeEnum.Normal;
							var phone = item.PhoneNumber;
							var maskedPhone = string.IsNullOrEmpty(phone) || phone.Length < 3 ? phone : phone[..^3] + "XXX";

							<div class="col-md-12 mb-2">
								<div class="ftco-animate properties d-flex border rounded overflow-hidden shadow-sm bg-white" style="min-height: 200px; margin-bottom: 15px">
									<div class="flex-shrink-0"
									     style="width: @(isDiamond ? "400px" : isGold ? "320px" : isSilver ? "270px" : "200px");
												height: @(isDiamond ? "350px" : isGold ? "250px" : isSilver ? "200px" : "180px");
												overflow: hidden;">
										@if (isDiamond)
										{
											var images = item.ListImages?.Take(6).ToList() ?? new List<string> { item.ImageUrl };
											<div class="h-100 d-flex flex-column gap-1">
												@if (images.Count > 0)
												{
													<div class="flex-grow-1" style="height: 110px;">
														<img src="@images[0]" class="img-fluid w-100 h-100 rounded" style="object-fit: cover;" />
													</div>
												}
												@if (images.Count > 1)
												{
													<div class="d-flex gap-1 mt-1" style="height: 85px;">
														@for (int i = 1; i < Math.Min(images.Count, 6); i++)
														{
															<div class="flex-fill">
																<img src="@images[i]" class="img-fluid w-100 h-100 rounded" style="object-fit: contain;" />
															</div>
														}
													</div>
												}
											</div>
										}
										else
										{
											<img src="@item.ImageUrl" alt="@item.Title" class="img-fluid h-100 w-100" style="object-fit: cover;">
										}

										@if (item.PackageTypeName != PackageTypeEnum.Normal.GetDisplayName())
										{
											<span id="packageBadgeVIP"
												  class="badge position-absolute @BadgeHelper.GetBadgeClass(item.PackageTypeName)"
												  style="color: #fff; top: 8px; left: 8px; font-size: 15px; padding: 8px; z-index: 1000">
												@item.PackageTypeName
											</span>
										}
									</div>

									<div class="flex-grow-1 p-3 d-flex flex-column justify-content-between">
										<div>
											<h5 class="mb-1">
												<a href="@Url.RouteUrl("PostDetailRoute", new { postId = item.Id })" class="text-dark font-weight-bold text-decoration-none">
													@item.Title
												</a>
											</h5>
											<div class="my-2 text-danger font-weight-semibold">
												@(((item.Price ?? 0) / 1_000_000M).ToString("0.#").Replace('.', ',')) triệu/tháng
												<span class="mx-2 text-muted">•</span>
												<span class="text-muted ms-2">@item.Area m²</span>
												<span class="mx-2 text-muted">•</span>
												<span class="text-muted ms-2">@item.BedroomCount</span>
												<span class="mx-2 text-muted">•</span>
												<span class="text-muted ms-2">@item.BathroomCount</span>
											</div>

											@{
												var fullAddress = $"{item.Address}, {item.WardName}, {item.DistrictName}, {item.ProvinceName}";
											}
											<p class="text-muted mt-1 mb-2">@fullAddress</p>
										</div>

										<div class="d-flex justify-content-between align-items-center small">
											<span class="text-secondary">@postedAgo</span>
											<div class="d-flex align-items-center">
												@if (isDiamond || isGold)
												{
													<button class="btn btn-success mr-2 phone-btn"
															data-full-phone="@phone"
															data-post-id="@item.Id"
															id="phoneBtn-@item.Id">
														<i class="fa fa-phone"></i> @maskedPhone
													</button>
												}
												<button class="btn btn-light border favorite-btn" data-post-id="@item.Id">
													<i class="fas fa-heart" id="heart-@item.Id"></i>
												</button>
											</div>
										</div>
									</div>
								</div>
							</div>
						}

					</div>
					}
			</div>
		</div>
	</div>
</section>
@Html.AntiForgeryToken()
<div id="custom-toast" class="custom-toast"></div>
@section script {
	<script src="~/js/jquery.min.js"></script>
	<script src="~/js/address.js"></script>
	<script src="~/js/filter.js"></script>
	<script>
		const selectedProvinceId = '@TempData["provinceId"]';
		const selectedDistrictId = '@TempData["districtId"]';
		const selectedWardId = '@TempData["wardId"]';

		document.addEventListener('DOMContentLoaded', function () {
			fetchProvinces().then(() => {
				if (selectedProvinceId) {
					document.getElementById('provinceDropdown').value = selectedProvinceId;
					fetchDistrict(selectedProvinceId).then(() => {
						if (selectedDistrictId) {
							document.getElementById('districtDropdown').value = selectedDistrictId;
							fetchWard(selectedDistrictId).then(() => {
								if (selectedWardId) {
									document.getElementById('wardDropdown').value = selectedWardId;
								}
							});
						}
					});
				}
			});
		});

	</script>
}
<script src="~/js/common/show-toast.js"></script>
<script src="~/js/favorite-post/add-favorite.js"></script>
<script>
	document.querySelector("form").addEventListener("submit", function (e) {
		document.getElementById("provinceId").value = document.getElementById("provinceDropdown").value;
		document.getElementById("districtId").value = document.getElementById("districtDropdown").value;
		document.getElementById("wardId").value = document.getElementById("wardDropdown").value;
		document.getElementById("provinceName").value = document.getElementById("provinceDropdown").selectedOptions[0].text;
		document.getElementById("districtName").value = document.getElementById("districtDropdown").selectedOptions[0].text;
		document.getElementById("wardName").value = document.getElementById("wardDropdown").selectedOptions[0].text;
	});

	document.addEventListener("DOMContentLoaded", function () {
		const phoneButtons = document.querySelectorAll(".phone-btn");

		phoneButtons.forEach(btn => {
			btn.addEventListener("click", function () {
				const fullPhone = btn.getAttribute("data-full-phone");
				btn.innerHTML = `<i class="fa fa-phone"></i> ${fullPhone}`;
				btn.classList.remove("btn-success");
				btn.classList.add("btn-outline-success");
				btn.disabled = true;
			});
		});
	});
</script>

